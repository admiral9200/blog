name: CI-Main

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_frontend:
    defaults:
      run:
        working-directory: './app'
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Install Packages
      run:  npm ci
    - name: Run Unit Tests
      run:  npm run test:unit
    - name: Build Frontend
      run:  npm run build
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: frontend-dist
        path: app/dist


  build_backend:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]

    env:
      PORT: 8080

    steps:
    - uses: actions/checkout@v2
    - name: Build using Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  # PUSH SPECIFIC

  deploy_production:
  runs-on: ubuntu-latest
  needs: ['build_frontend', 'build_backend']
  if: github.event_name == 'push'
  steps:
  - uses: actions/checkout@v2
  - name: Download Frontend Build Artifact
    uses: actions/download-artifact@v2
    with:
      name: frontend-dist
      path: app/dist
  - name: Tell Server to restart after Deployment
    run: mkdir tmp && touch tmp/restart.txt
  - name: ðŸš€ Deploy!
    uses: SamKirkland/FTP-Deploy-Action@4.0.0
    with:
      server: ftp.nailuj.net
      username: blog
      password: ${{ secrets.FTP_PASSWORD }}
      server-dir: ./production/
      exclude: .git* 
        - .git*/**
        - node_modules/**
        - node_modules/**/*

  # PULL REQUEST SPECIFIC

  init_db_staging:
    runs-on: ubuntu-latest
    needs: ['build_backend', 'build_frontend']
    if: github.event_name == 'pull_request'
    env:
      MONGO_URL: ${{ secrets.MONGO_URL_STAGING }}
    steps:
    - uses: actions/checkout@v2
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Install Packages
      run:  npm ci
    - name: Run Mongo-Init Script
      run:  npm run clearDB

  deploy_staging:
    runs-on: ubuntu-latest
    needs: ['build_frontend', 'build_backend', 'init_db']
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v2
    - name: Download Frontend Build Artifact
      uses: actions/download-artifact@v2
      with:
        name: frontend-dist
        path: app/dist
    - name: Tell Server to restart after Deployment
      run: mkdir tmp && touch tmp/restart.txt
    - name: ðŸš€ Deploy!
      uses: SamKirkland/FTP-Deploy-Action@4.0.0
      with:
        server: ftp.nailuj.net
        username: blog
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: ./staging/
        exclude: .git* 
          - .git*/**
          - node_modules/**
          - node_modules/**/*

  e2e:
    runs-on: ubuntu-latest
    needs: ['deploy_staging']
    if: github.event_name == 'pull_request'
    steps:
    - name: Download current commit
      uses: actions/checkout@v2
    - name: Setup playwright
      uses: microsoft/playwright-github-action@v1
    - name: Install Packages
      run:  npm ci
    - name: ðŸ§ª Run end-to-end tests
      run:  npm run test:e2e